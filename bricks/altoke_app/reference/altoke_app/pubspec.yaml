name: altoke_app_monorepo
publish_to: none
version: 1.0.0+1
#remove-start#
resolution: workspace
#remove-end#
#w 2v w#

environment:
  sdk: ">=3.6.1 <4.0.0"
  flutter: ">=3.27.3 <4.0.0"

dev_dependencies:
  melos: ^7.0.0-dev.5
  very_good_analysis: ^7.0.0

melos:
  command:
    bootstrap:
      environment:
        sdk: ">=3.6.1 <4.0.0"
        flutter: ">=3.27.3 <4.0.0"
      dependencies:
        meta: ^1.15.0
      dev_dependencies:
        very_good_analysis: ^7.0.0
    clean:
      hooks:
        pre:
          run: melos run clean

  scripts:
    # Clean-up
    clean:
      description: Deep clean-up
      run: >
        git clean -dfX MELOS_ROOT_PATH

    # Code generation
    gen:
      description: Generate code for a package
      run: dart run build_runner build --delete-conflicting-outputs
      packageFilters:
        dependsOn:
          - build_runner
      exec:
        concurrency: 1
        failFast: true
        orderDependents: true
    gen.l10n:
      description: Generate l10n code for a package
      run: flutter gen-l10n
      packageFilters:
        fileExists:
          - l10n.yaml
      exec:
        concurrency: 1
        failFast: true
    gen.all:
      description: Generate code for all packages
      steps:
        - gen
        - gen.l10n
    gen.all.fast:
      description: Generate code for all packages (multi-threaded)
      run: >
        melos exec --depends-on=build_runner --order-dependents -- "dart run build_runner build --delete-conflicting-outputs"
        &&
        melos exec --file-exists=l10n.yaml --order-dependents -- "flutter gen-l10n"

    # Spell checking
    spellcheck:
      description: Run spell checking for the entire project
      run: cspell lint --no-progress -c ./.cspell/cspell.yaml MELOS_ROOT_PATH/**

    # Formatting
    format:
      description: Format a package
      run: dart format .
      exec:
        concurrency: 1
    format.all:
      description: Format all packages
      steps:
        - format
    format.ci:
      description: Format all packages (CI)
      run: melos exec --order-dependents --fail-fast -- "dart format --set-exit-if-changed ."

    # Analyzing
    analyze:
      description: Analyze a package
      run: flutter analyze --no-pub
    analyze.custom:
      description: Analyze a package with custom lint rules
      run: dart run custom_lint
      packageFilters:
        dependsOn:
          - custom_lint
      exec:
        concurrency: 1
        orderDependents: true
    analyze.all:
      description: Analyze all packages
      steps:
        - analyze
        - analyze.custom
    analyze.ci:
      description: Analyze all packages (CI)
      run: >
        flutter analyze --no-pub --fatal-infos --fatal-warnings --no-congratulate --no-preamble
        &&
        melos exec --order-dependents --fail-fast --depends-on=custom_lint -- "dart run custom_lint --fatal-infos --fatal-warnings"

    # Testing & Coverage
    test.dart:
      description: Test a Dart package
      run: >
        dart test -x ci-only --coverage=coverage -r expanded --test-randomize-ordering-seed random --color
        &&
        format_coverage --lcov --in=./coverage/ --out=./coverage/lcov.info --report-on=lib -c -b 'MELOS_PACKAGE_PATH'
      packageFilters:
        flutter: false
        dirExists:
          - test
        dependsOn:
          - test
      exec:
        concurrency: 1
        orderDependents: true
    test.flutter:
      description: Test a Flutter package
      run: flutter test -x ci-only --coverage -r expanded --test-randomize-ordering-seed random
      packageFilters:
        flutter: true
        dirExists:
          - test
        dependsOn:
          - flutter_test
      exec:
        concurrency: 1
        orderDependents: true
    test.all:
      description: Test all packages
      steps:
        - test.dart
        - test.flutter
    test.ci:
      description: Test all packages (CI)
      run: >
        melos exec --order-dependents --fail-fast --no-flutter --dir-exists="test" --depends-on=test -- "dart test -x ci-only --coverage=coverage -r expanded --test-randomize-ordering-seed random && format_coverage --lcov --in=./coverage/ --out=./coverage/lcov.info --report-on=lib -c -b 'MELOS_PACKAGE_PATH'"
        &&
        melos exec --order-dependents --fail-fast --flutter --dir-exists="test" --depends-on=flutter_test -- "flutter test -x ci-only --coverage -r expanded --test-randomize-ordering-seed random"
    coverage.merge:
      description: Merge all packages coverage trace files ignoring data related to generated files
      run: >
        coverde rm MELOS_ROOT_PATH/coverage/filtered.lcov.info
        &&
        melos exec -c 1 --file-exists=coverage/lcov.info -- "coverde filter --input ./coverage/lcov.info --output MELOS_ROOT_PATH/coverage/filtered.lcov.info --paths-parent MELOS_PACKAGE_PATH  --filters \.g\.dart,\.gr\.dart"
    coverage.check:
      description: Check test coverage
      run: >
        coverde check -i MELOS_ROOT_PATH/coverage/filtered.lcov.info 100

#replace-start#
#with#
# workspace:
#   - packages/app
#replace-end#

